name: SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-22.04  # Utilisation explicite d'Ubuntu 22.04 pour éviter les futurs problèmes liés à "ubuntu-latest"
    
    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Désactiver les clones superficiels pour garantir une analyse complète

      # Étape 2 : Configurer JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'  # Options alternatives : 'temurin', 'adopt'

      # Étape 3 : Cacher les packages SonarQube
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Étape 4 : Cacher les packages Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Étape 5 : Construire et analyser le projet
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Requis pour obtenir les informations sur les PR, le cas échéant
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Jeton SonarCloud configuré dans les Secrets
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Arthy04_devops-livecoding
